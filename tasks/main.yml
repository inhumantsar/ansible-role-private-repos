---
# tasks file for private-repos
- debug: msg="Starting tasks from private-repos..."

- name: Set up RPM repos...
  yum_repository:
    name: "{{private_repo_name_prefix}}-{{item}}"
    description: "{{private_repo_desc_prefix}} - {{item}}"
    baseurl: "https://{{private_repo_username}}:{{private_repo_encrypted_password}}@{{private_repo_url_base}}/{{private_repo_url_pathprefix}}/{{item}}"
    gpgcheck: "{{ private_repo_rpm_gpgcheck }}"
    sslverify: "{{ private_repo_verify_ssl }}"
  with_items:
    - "{{private_repo_rpm_repos}}"
  become: True
  when: ansible_os_family == "RedHat"

# we're doing this because rpm_key doesn't play nice with proxy: https://github.com/ansible/ansible/issues/38050
# and also because rpm itself doesn't play nice with self-signed SSL...
# also also, get_url uses the same function as rpm_key underneath it all, so shell+curl it is.
- set_fact:
    private_repos_curl_opts: "-kL"
  when: not private_repos_verify_ssl

- name: Download RPM signing key
  shell: "curl {{ private_repos_curl_opts }} -o $REPO_KEY_PATH $REPO_KEY_URL"
  environment:
    REPO_KEY_URL: "https://{{private_repo_username}}:{{private_repo_encrypted_password}}@{{private_repo_url_base}}/{{private_repo_url_pathprefix}}/api/gpg/key/public"
    REPO_KEY_PATH: "/tmp/{{ private_repo_url_base }}_rpm.pub"
    
- name: Install RPM signing key
  rpm_key:
    key: "/tmp/{{ private_repo_url_base }}_rpm.pub"
  become: True
  when: ansible_os_family == "RedHat"
    
- name: Set up APT repos...
  apt_repository:
    filename: "{{private_repo_name_prefix}}-{{item['name']}}"
    repo: "deb https://{{private_repo_username}}:{{private_repo_encrypted_password}}@{{private_repo_url_base}}/{{private_repo_url_pathprefix}}/{{item['name']}} {{item['codename']}} {{item['component']}}"
    update_cache: no
    validate_certs: "{{ private_repo_verify_ssl }}"
  with_items:
    - "{{private_repo_apt_repos}}"
  become: True
  when: ansible_os_family == "Debian"

- name: Set up PyPI repos...
  template:
    src: templates/pip.conf.j2
    dest: "/etc/pip.conf"
    owner: root
    group: root
    mode: 0644
  become: True

- name: Log in to Docker repos...
  command: "docker login -p '{{private_repo_password}}' -u '{{private_repo_username}}' {{item}}.{{private_repo_url_base}}"
  with_items:
    - "{{private_repo_docker_repos}}"
